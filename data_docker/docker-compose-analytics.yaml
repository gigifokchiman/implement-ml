services:
  trino:
    build:
      context: ./shared/trino
    container_name: trino
    hostname: trino
    ports:
      - "28080:8080"
    depends_on:
      - iceberg-rest
      - minio
    volumes:
      - ./shared/trino/catalog:/etc/trino/catalog
    environment:
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: password
      AWS_REGION: eu-west-1
    networks:
      analytics_net:

  iceberg-rest:
    image: tabulario/iceberg-rest
    container_name: iceberg-rest
    depends_on:
      iceberg-postgres:
        condition: service_healthy
    ports:
      - 8181:8181
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
      - CATALOG_URI=jdbc:postgresql://iceberg-postgres/iceberg_catalog
      - CATALOG_JDBC_USER=admin
      - CATALOG_JDBC_PASSWORD=password
    networks:
      analytics_net:

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]
    volumes:
      - ./volumes-minio:/data
    networks:
      analytics_net:
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-init:
    build: ./shared/minio/
    networks:
      analytics_net:
    env_file:
      - ./shared/minio/.env
    volumes:
      - ./shared/minio/data/:/data
    environment:
      - USER=user
      - COPY_DIR=false
      - INPUT_BUCKETS=iceberg-data
    depends_on:
      - minio
    entrypoint: /bin/sh ./entrypoint.sh

  mc:
    image: minio/mc
    container_name: mc
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc policy set public minio/warehouse;
      tail -f /dev/null
      "
    networks:
      analytics_net:
    volumes:
      - ./volumes-mc:/root/.mc

  iceberg-postgres:
    image: postgres:13
    container_name: iceberg-postgres
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: iceberg_catalog
    networks:
      analytics_net:
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d iceberg_catalog" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  volumes-minio:
  volumes-mc: